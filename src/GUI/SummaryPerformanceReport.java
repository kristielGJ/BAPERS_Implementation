/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import model.database.I_Bapers;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;

/**
 *
 * @author kehkshan and Manpreet
 */
public class SummaryPerformanceReport extends javax.swing.JPanel {

    private I_Bapers bapers;
    private GUI f;
    private JPanel lastPanel;

    /**
     * Creates new form SummaryPerformanceReport
     */
    public SummaryPerformanceReport(int width, int height, LocalDate from_Date, LocalDate to_Date, I_Bapers bapers, GUI f) {
        initComponents(width, height, from_Date, to_Date, bapers, f);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(int width, int height, LocalDate from_Date, LocalDate to_Date, I_Bapers bapers, GUI f) {

        this.f = f;
        this.lastPanel = f.getCurrentPanel();
        f.setCurrentPanel(this);
        this.bapers = bapers;
        shift_type_combo_box = new javax.swing.JComboBox<>();
        back_button = new javax.swing.JButton();
        print_button = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        summary_performance_report_for_period = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        summary_performance_report_shift = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        period_input = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        period2_input = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        from_date = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        to_date = new javax.swing.JTextField();
        shift_type = new javax.swing.JTextField();

        period_input.setEditable(false);
        period2_input.setEditable(false);
        from_date.setEditable(false);
        to_date.setEditable(false);
        shift_type.setEditable(false);
        period_input.setText(String.valueOf(from_Date));
        period2_input.setText(String.valueOf(to_Date));
        from_date.setText(String.valueOf(from_Date));
        to_date.setText(String.valueOf(to_Date));

        setBackground(new java.awt.Color(157, 195, 230));
        setPreferredSize(new java.awt.Dimension(800, 500));

        shift_type_combo_box.setBackground(new java.awt.Color(1, 23, 71));
        shift_type_combo_box.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        shift_type_combo_box.setForeground(new java.awt.Color(157, 195, 230));
        shift_type_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day Shift 1", "Day Shift 2", "Night Shift 1" }));


        back_button.setBackground(new java.awt.Color(1, 23, 71));
        back_button.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        back_button.setForeground(new java.awt.Color(157, 195, 230));
        back_button.setText("Back");
        back_button.setBorderPainted(false);
        back_button.setFocusPainted(false);
        back_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                back_buttonMouseClicked(evt);
            }
        });

        print_button.setBackground(new java.awt.Color(1, 23, 71));
        print_button.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        print_button.setForeground(new java.awt.Color(157, 195, 230));
        print_button.setText("Print");
        print_button.setBorderPainted(false);
        print_button.setFocusPainted(false);
        shift_type_combo_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shift_type_combo_boxActionPerformed(evt, summary_performance_report_shift, from_Date, to_Date);
            }
        });


        jPanel1.setBackground(new java.awt.Color(157, 195, 230));

        summary_performance_report_for_period.setModel(new javax.swing.table.DefaultTableModel(
            new String [] {
                "Date", "Copy Room", "Development", "Finishing", "Packing"
            },0
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        addPeriodTable(summary_performance_report_for_period, from_Date, to_Date);
        summary_performance_report_for_period.setGridColor(new java.awt.Color(1, 23, 71));
        summary_performance_report_for_period.setShowGrid(true);
        summary_performance_report_for_period.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(summary_performance_report_for_period);

        summary_performance_report_shift.setModel(new javax.swing.table.DefaultTableModel(
            new String [] {
                "Date", "Copy Room", "Development", "Finishing", "Packing"
            },0
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dayShift1(summary_performance_report_shift, from_Date, to_Date);
        summary_performance_report_shift.setGridColor(new java.awt.Color(1, 23, 71));
        summary_performance_report_shift.setShowGrid(true);
        summary_performance_report_shift.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(summary_performance_report_shift);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(1, 23, 71));
        jLabel3.setText("Bapers");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(1, 23, 71));
        jLabel1.setText("Summary Performance Report");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(1, 23, 71));
        jLabel2.setText("Period:");

        period_input.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        period_input.setForeground(new java.awt.Color(1, 23, 71));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(1, 23, 71));
        jLabel4.setText("-");

        period2_input.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        period2_input.setForeground(new java.awt.Color(1, 23, 71));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(1, 23, 71));
        jLabel5.setText("For Period:");

        from_date.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(1, 23, 71));
        jLabel6.setText("-");

        to_date.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        shift_type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 213, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(period_input, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(period2_input, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(shift_type, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(from_date, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(to_date, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(period_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(period2_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shift_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(from_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(to_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(shift_type_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(print_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(back_button))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(print_button)
                    .addComponent(back_button)
                    .addComponent(shift_type_combo_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dayShift1(JTable table, LocalDate from_date, LocalDate to_date){
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        model.setRowCount(0);
        ArrayList<reports.summary_performance_report.SummaryPerformanceReport> details = bapers.generateSummaryPerformanceReport(from_date, to_date, LocalTime.of(05,00,00), LocalTime.of(14,30,00));
        for(reports.summary_performance_report.SummaryPerformanceReport report : details){
            model.addRow(new Object[]{report.getDate(), f.convertToString(report.getCopy_room_time()), f.convertToString(report.getDevelopment_time()), f.convertToString(report.getFinishing_time()), f.convertToString(report.getPacking_time())});
        }
        shift_type.setText("Day shift 1 (5am-2:30pm)");
        table.setModel(model);
    }

    private void dayShift2(JTable table, LocalDate from_date, LocalDate to_date){
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        model.setRowCount(0);
        ArrayList<reports.summary_performance_report.SummaryPerformanceReport> details = bapers.generateSummaryPerformanceReport(from_date, to_date, LocalTime.of(14,30,00), LocalTime.of(22,00,00));
        for(reports.summary_performance_report.SummaryPerformanceReport report : details){
            model.addRow(new Object[]{report.getDate(), f.convertToString(report.getCopy_room_time()), f.convertToString(report.getDevelopment_time()), f.convertToString(report.getFinishing_time()), f.convertToString(report.getPacking_time())});
        }
        shift_type.setText("Day shift 2 (2:30pm-10pm)");
        table.setModel(model);
    }

    private void nightShift1(JTable table, LocalDate from_date, LocalDate to_date){
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        model.setRowCount(0);
        ArrayList<reports.summary_performance_report.SummaryPerformanceReport> details = bapers.generateSummaryPerformanceReport(from_date, to_date, LocalTime.of(22,00,00), LocalTime.of(05,00,00));
        for(reports.summary_performance_report.SummaryPerformanceReport report : details){
            model.addRow(new Object[]{report.getDate(), f.convertToString(report.getCopy_room_time()), f.convertToString(report.getDevelopment_time()), f.convertToString(report.getFinishing_time()), f.convertToString(report.getPacking_time())});
        }
        shift_type.setText("Night shift 1 (10pm-5am)");
        table.setModel(model);
    }

    public void shift_type_combo_boxActionPerformed(ActionEvent evt, JTable table, LocalDate from_date, LocalDate to_date){
        if (shift_type_combo_box.getSelectedItem() == "Day Shift 1"){
            dayShift1(table, from_date, to_date);
        }
        else if (shift_type_combo_box.getSelectedItem() == "Day Shift 2"){
            dayShift2(table, from_date, to_date);
        }
        else if(shift_type_combo_box.getSelectedItem() == "Night Shift 1"){
            nightShift1(table, from_date, to_date);
        }
    }

    private void addPeriodTable(JTable table, LocalDate from_Date, LocalDate to_Date){
        long copy_room_total = 0;
        long development_total = 0;
        long finishing_total = 0;
        long packing_total = 0;

        //Day shift 1
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        ArrayList<reports.summary_performance_report.SummaryPerformanceReport> dayShift1 = bapers.generateSummaryPerformanceReport(from_Date, to_Date, LocalTime.of(05,00,00), LocalTime.of(14,30,00));
        ArrayList<reports.summary_performance_report.SummaryPerformanceReport> dayShift2 = bapers.generateSummaryPerformanceReport(from_Date, to_Date, LocalTime.of(14,30,00), LocalTime.of(22,00,00));
        ArrayList<reports.summary_performance_report.SummaryPerformanceReport> nightShift1 = bapers.generateSummaryPerformanceReport(from_Date, to_Date, LocalTime.of(22,00,00), LocalTime.of(05,00,00));
        for(reports.summary_performance_report.SummaryPerformanceReport report1 : dayShift1){
            copy_room_total += report1.getCopy_room_time();
            development_total += report1.getDevelopment_time();
            finishing_total += report1.getFinishing_time();
            packing_total += report1.getPacking_time();
        }
        model.addRow(new Object[]{"Day Shift 1", f.convertToString(copy_room_total), f.convertToString(development_total), f.convertToString(finishing_total), f.convertToString(packing_total)});

        //Day shift 2
        copy_room_total = 0;
        development_total = 0;
        finishing_total = 0;
        packing_total = 0;
        for(reports.summary_performance_report.SummaryPerformanceReport report2 : dayShift2){
            copy_room_total += report2.getCopy_room_time();
            development_total += report2.getDevelopment_time();
            finishing_total += report2.getFinishing_time();
            packing_total += report2.getPacking_time();
        }
        model.addRow(new Object[]{"Day Shift 2", f.convertToString(copy_room_total), f.convertToString(development_total), f.convertToString(finishing_total), f.convertToString(packing_total)});

        //Night shift 1
        copy_room_total = 0;
        development_total = 0;
        finishing_total = 0;
        packing_total = 0;
        for(reports.summary_performance_report.SummaryPerformanceReport report3 : nightShift1){
            copy_room_total += report3.getCopy_room_time();
            development_total += report3.getDevelopment_time();
            finishing_total += report3.getFinishing_time();
            packing_total += report3.getPacking_time();
        }
        model.addRow(new Object[]{"Night Shift 1", f.convertToString(copy_room_total), f.convertToString(development_total), f.convertToString(finishing_total), f.convertToString(packing_total)});
        table.setModel(model);
    }

    private void back_buttonMouseClicked(java.awt.event.MouseEvent evt) {
        f.setLastPanel(lastPanel);
        f.getLastPanel().setVisible(true);
        f.remove(f.getCurrentPanel());
        f.setCurrentPanel(lastPanel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_button;
    private javax.swing.JTextField from_date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField period2_input;
    private javax.swing.JTextField period_input;
    private javax.swing.JButton print_button;
    private javax.swing.JTextField shift_type;
    private javax.swing.JComboBox<String> shift_type_combo_box;
    private javax.swing.JTable summary_performance_report_for_period;
    private javax.swing.JTable summary_performance_report_shift;
    private javax.swing.JTextField to_date;
    // End of variables declaration//GEN-END:variables
}
